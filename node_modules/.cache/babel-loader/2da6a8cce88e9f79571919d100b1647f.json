{"ast":null,"code":"import _slicedToArray from \"/Users/ednardo/pdf-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/ednardo/pdf-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/ednardo/pdf-viewer/src/components/pdf/single-page.js\";\nimport React, { useMemo, useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\n\nfunction highlightPattern(text, pattern) {\n  var _this = this;\n\n  var splitText = text.split(pattern);\n\n  if (splitText.length <= 1) {\n    return text;\n  }\n\n  var matches = text.match(pattern);\n  return splitText.reduce(function (arr, element, index) {\n    return matches[index] ? [].concat(_toConsumableArray(arr), [element, /*#__PURE__*/React.createElement(\"mark\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }\n    }, matches[index])]) : [].concat(_toConsumableArray(arr), [element]);\n  }, []);\n}\n\nexport default function SinglePage(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      numPages = _useState2[0],\n      setNumPages = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pageNumber = _useState4[0],\n      setPageNumber = _useState4[1]; //setting 1 to show fisrt page\n\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchText = _useState6[0],\n      setSearchText = _useState6[1];\n\n  var textRenderer = useMemo(function (textItem) {\n    console.log('txt', textItem);\n    return highlightPattern(textItem, searchText);\n  }, [searchText]);\n\n  function onChange(event) {\n    setSearchText(event.target.value);\n  }\n\n  function onDocumentLoadSuccess(_ref) {\n    var numPages = _ref.numPages;\n    setNumPages(numPages);\n    setPageNumber(1);\n  }\n\n  function changePage(offset) {\n    setPageNumber(function (prevPageNumber) {\n      return prevPageNumber + offset;\n    });\n  }\n\n  function previousPage() {\n    changePage(-1);\n  }\n\n  function nextPage() {\n    changePage(1);\n  }\n\n  var pdf = props.pdf;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Document, {\n    file: pdf,\n    options: {\n      workerSrc: \"/pdf.worker.js\"\n    },\n    onLoadSuccess: onDocumentLoadSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Page, {\n    pageNumber: pageNumber,\n    customTextRenderer: textRenderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Search:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    id: \"search\",\n    value: searchText,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Page \", pageNumber || (numPages ? 1 : \"--\"), \" of \", numPages || \"--\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pageNumber <= 1,\n    onClick: previousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pageNumber >= numPages,\n    onClick: nextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Next\")));\n}","map":{"version":3,"sources":["/Users/ednardo/pdf-viewer/src/components/pdf/single-page.js"],"names":["React","useMemo","useState","Document","Page","highlightPattern","text","pattern","splitText","split","length","matches","match","reduce","arr","element","index","SinglePage","props","numPages","setNumPages","pageNumber","setPageNumber","searchText","setSearchText","textRenderer","textItem","console","log","onChange","event","target","value","onDocumentLoadSuccess","changePage","offset","prevPageNumber","previousPage","nextPage","pdf","workerSrc"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nfunction highlightPattern(text, pattern) {\r\n  const splitText = text.split(pattern);\r\n\r\n  if (splitText.length <= 1) {\r\n    return text;\r\n  }\r\n\r\n  const matches = text.match(pattern);\r\n\r\n  return splitText.reduce((arr, element, index) => (matches[index] ? [\r\n    ...arr,\r\n    element,\r\n    <mark key={index}>\r\n      {matches[index]}\r\n    </mark>,\r\n  ] : [...arr, element]), []);\r\n}\r\n\r\nexport default function SinglePage(props) {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1); //setting 1 to show fisrt page\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const textRenderer = useMemo((textItem) => {\r\n    console.log('txt', textItem);\r\n    return highlightPattern(textItem, searchText);\r\n  }, [searchText]);\r\n\r\n  function onChange(event) {\r\n    setSearchText(event.target.value);\r\n  }\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n    setPageNumber(1);\r\n  }\r\n\r\n  function changePage(offset) {\r\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n  }\r\n\r\n  function previousPage() {\r\n    changePage(-1);\r\n  }\r\n\r\n  function nextPage() {\r\n    changePage(1);\r\n  }\r\n\r\n  const { pdf } = props;\r\n\r\n  return (\r\n    <>\r\n      <Document\r\n        file={pdf}\r\n        options={{ workerSrc: \"/pdf.worker.js\" }}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n      >\r\n        <Page\r\n          pageNumber={pageNumber}\r\n          customTextRenderer={textRenderer}\r\n        />\r\n      </Document>\r\n      <div>\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input type=\"search\" id=\"search\" value={searchText} onChange={onChange} />\r\n      </div>\r\n      <div>\r\n        <p>\r\n          Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\r\n        </p>\r\n        <button type=\"button\" disabled={pageNumber <= 1} onClick={previousPage}>\r\n          Previous\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          disabled={pageNumber >= numPages}\r\n          onClick={nextPage}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}