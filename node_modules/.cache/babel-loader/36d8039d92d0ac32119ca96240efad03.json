{"ast":null,"code":"import _slicedToArray from \"/Users/ednardo/pdf-viewer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ednardo/pdf-viewer/src/components/pdf/all-pages.js\";\nimport React, { useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nexport default function AllPages(props) {\n  var _this = this;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      numPages = _useState2[0],\n      setNumPages = _useState2[1];\n\n  function onDocumentLoadSuccess(_ref) {\n    var numPages = _ref.numPages;\n    setNumPages(numPages);\n  }\n\n  var pdf = props.pdf;\n  return /*#__PURE__*/React.createElement(Document, {\n    file: pdf,\n    options: {\n      workerSrc: \"/pdf.worker.js\"\n    },\n    onLoadSuccess: onDocumentLoadSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, Array.from(new Array(numPages), function (el, index) {\n    return /*#__PURE__*/React.createElement(Page, {\n      key: \"page_\".concat(index + 1),\n      pageNumber: index + 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/ednardo/pdf-viewer/src/components/pdf/all-pages.js"],"names":["React","useState","Document","Page","AllPages","props","numPages","setNumPages","onDocumentLoadSuccess","pdf","workerSrc","Array","from","el","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,WAA/B;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,kBAAgCJ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,WAASC,qBAAT,OAA6C;AAAA,QAAZF,QAAY,QAAZA,QAAY;AAC3CC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AAED,MAAQG,GAAR,GAAgBJ,KAAhB,CAAQI,GAAR;AAEA,sBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEA,GADR;AAEE,IAAA,OAAO,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAFX;AAGE,IAAA,aAAa,EAAEF,qBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGG,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAUL,QAAV,CAAX,EAAgC,UAACO,EAAD,EAAKC,KAAL;AAAA,wBAC/B,oBAAC,IAAD;AAAM,MAAA,GAAG,iBAAUA,KAAK,GAAG,CAAlB,CAAT;AAAgC,MAAA,UAAU,EAAEA,KAAK,GAAG,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD+B;AAAA,GAAhC,CALH,CADF;AAWD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nexport default function AllPages(props) {\r\n  const [numPages, setNumPages] = useState(null);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  const { pdf } = props;\r\n\r\n  return (\r\n    <Document\r\n      file={pdf}\r\n      options={{ workerSrc: \"/pdf.worker.js\" }}\r\n      onLoadSuccess={onDocumentLoadSuccess}\r\n    >\r\n      {Array.from(new Array(numPages), (el, index) => (\r\n        <Page key={`page_${index + 1}`} pageNumber={index + 1} />\r\n      ))}\r\n    </Document>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}